{"version":3,"sources":["services/numbers.js","index.js"],"names":["baseUrl","axios","get","name","number","post","id","delete","newObject","put","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","message","isError","notification","setNotification","useEffect","numberService","then","response","data","filterChangeHandler","event","target","value","submitPressed","preventDefault","existingPerson","find","elem","window","confirm","map","person","setTimeout","catch","error","concat","handleNewNameChange","handleNewNumberChange","removePerson","personName","Filter","onChange","PersonForm","onSubmit","type","Persons","toLowerCase","includes","key","Person","onClick","Notification","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36677da7.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = \"/api/persons\"\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = (name, number) => {\n  return axios.post(baseUrl, {name, number})\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nexport default { getAll, create, remove, update }\n","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport numberService from './services/numbers'\nimport './index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notification, setNotification ] = useState({message:null, isError:false})\n\n  const submitPressed = (event) => {\n    event.preventDefault()\n    const existingPerson = persons.find((elem) => elem.name === newName)\n    if (existingPerson){\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with new one?`)) {\n        numberService\n          .update(existingPerson.id, {...existingPerson, number:newNumber})\n          .then(response => {\n            setPersons(persons.map(person => person.id === existingPerson.id ? response.data : person))\n            setNotification({message:`${newName}'s number changed to ${newNumber}`, isError:false})\n            setTimeout(() => {\n              setNotification({message:null, isError:false})\n            }, 5000)\n          })\n          .catch(error => {\n            setNotification({message:`${newName} was already removed from server`, isError:true})\n            setTimeout(() => {\n              setNotification({message:null, isError:false})\n            }, 5000)\n          })\n      }\n    } else {\n      numberService\n        .create(newName, newNumber)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setNotification({message:`Added ${response.data.name}`, isError:false})\n          setTimeout(() => {\n            setNotification({message:null, isError:false})\n          }, 5000)\n      })\n    }\n    setNewName(\"\")\n    setNewNumber(\"\")\n  }\n\n  const handleNewNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const removePerson = (id) => {\n    const personName = persons.find(person => person.id === id).name\n    if (window.confirm(`Delete ${personName} ?`)) {\n      numberService\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id))\n          setNotification({message:`Deleted ${personName}`, isError:false})\n          setTimeout(() => {\n            setNotification({message:null, isError:false})\n          }, 5000)\n        })\n    }\n  }\n\n  useEffect(() => {\n    numberService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  return (\n    <div>\n\n      <h2>Phonebook</h2>\n      <Notification message={notification.message} isError={notification.isError} />\n\n      <Filter filter={filter} filterChangeHandler={handleFilterChange} />\n\n      <h3>Add a new</h3>\n      <PersonForm\n        submitPressed={submitPressed}\n        newName={newName}\n        handleNewNameChange={handleNewNameChange}\n        newNumber={newNumber}\n        handleNewNumberChange={handleNewNumberChange}\n      />\n\n      <h3>Numbers</h3>\n      <Persons persons={persons} filter={filter} removePerson={removePerson} />\n\n    </div>\n  )\n}\n\nconst Filter = ({filter, filterChangeHandler}) => {\n  return (\n    <div>\n      filter shown with <input value={filter} onChange={filterChangeHandler} />\n    </div>\n  )\n}\n\nconst PersonForm = ({submitPressed, newName, handleNewNameChange, newNumber, handleNewNumberChange}) => {\n  return (\n    <form onSubmit={submitPressed}>\n      <div> name: <input value={newName} onChange={handleNewNameChange}/> </div>\n      <div> number: <input value={newNumber} onChange={handleNewNumberChange} /></div>\n      <div> <button type=\"submit\">add</button> </div>\n    </form>\n  )\n}\n\nconst Persons = ({persons, filter, removePerson}) => {\n  const filteredPersons = () => {\n    return persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n  }\n\n  return (\n    <table>\n      <tbody>\n        {filteredPersons().map(elem =>\n          <Person key={elem.name}\n                  name={elem.name}\n                  number={elem.number}\n                  removePerson={() => removePerson(elem.id)}/>)\n        }\n      </tbody>\n    </table>\n  )\n}\n\nconst Person = ({name, number, removePerson}) => {\n  return (\n    <tr>\n      <td>{name}</td><td>{number}<button onClick={removePerson}>delete</button></td>\n    </tr>\n  )\n}\n\nconst Notification = ({message, isError}) => {\n  if (message === null) return null\n\n  return (\n    <div className={isError ? \"error\" : \"success\"}>\n      {message} {isError}\n    </div>\n  )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}